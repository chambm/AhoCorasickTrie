// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// AhoCorasickSearchList
Rcpp::List AhoCorasickSearchList(Rcpp::StringVector keywords, Rcpp::List textList, std::string alphabet, bool groupByKeyword, int iterationFeedback);
RcppExport SEXP _AhoCorasickTrie_AhoCorasickSearchList(SEXP keywordsSEXP, SEXP textListSEXP, SEXP alphabetSEXP, SEXP groupByKeywordSEXP, SEXP iterationFeedbackSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type keywords(keywordsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type textList(textListSEXP);
    Rcpp::traits::input_parameter< std::string >::type alphabet(alphabetSEXP);
    Rcpp::traits::input_parameter< bool >::type groupByKeyword(groupByKeywordSEXP);
    Rcpp::traits::input_parameter< int >::type iterationFeedback(iterationFeedbackSEXP);
    rcpp_result_gen = Rcpp::wrap(AhoCorasickSearchList(keywords, textList, alphabet, groupByKeyword, iterationFeedback));
    return rcpp_result_gen;
END_RCPP
}
// AhoCorasickSearch
Rcpp::List AhoCorasickSearch(Rcpp::StringVector keywords, Rcpp::StringVector text, std::string alphabet, bool groupByKeyword, int iterationFeedback);
RcppExport SEXP _AhoCorasickTrie_AhoCorasickSearch(SEXP keywordsSEXP, SEXP textSEXP, SEXP alphabetSEXP, SEXP groupByKeywordSEXP, SEXP iterationFeedbackSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type keywords(keywordsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type text(textSEXP);
    Rcpp::traits::input_parameter< std::string >::type alphabet(alphabetSEXP);
    Rcpp::traits::input_parameter< bool >::type groupByKeyword(groupByKeywordSEXP);
    Rcpp::traits::input_parameter< int >::type iterationFeedback(iterationFeedbackSEXP);
    rcpp_result_gen = Rcpp::wrap(AhoCorasickSearch(keywords, text, alphabet, groupByKeyword, iterationFeedback));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_AhoCorasickTrie_AhoCorasickSearchList", (DL_FUNC) &_AhoCorasickTrie_AhoCorasickSearchList, 5},
    {"_AhoCorasickTrie_AhoCorasickSearch", (DL_FUNC) &_AhoCorasickTrie_AhoCorasickSearch, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_AhoCorasickTrie(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
